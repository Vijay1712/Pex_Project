// <copyright file="Question.countDistinct.g.cs">Copyright ?  2014</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Submission
{
    public partial class Question
    {
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct300()
{
    int i;
    int[] ints = new int[10];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(10, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct619()
{
    int i;
    int[] ints = new int[10];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct492()
{
    int i;
    int[] ints = new int[5];
    ints[0] = 1;
    ints[2] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(5, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct40()
{
    int i;
    int[] ints = new int[13];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(13, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct568()
{
    int i;
    int[] ints = new int[14];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(14, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct648()
{
    int i;
    int[] ints = new int[7];
    ints[0] = 1;
    ints[1] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(7, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct935()
{
    int i;
    int[] ints = new int[12];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct752()
{
    int i;
    int[] ints = new int[15];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(15, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct29()
{
    int i;
    int[] ints = new int[5];
    ints[0] = 1;
    ints[1] = 1;
    ints[2] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(5, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct635()
{
    int i;
    int[] ints = new int[7];
    ints[0] = 1;
    ints[3] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(7, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct143()
{
    int i;
    int[] ints = new int[13];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct147()
{
    int i;
    int[] ints = new int[11];
    ints[0] = 1;
    ints[1] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(11, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct902()
{
    int i;
    int[] ints = new int[16];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(16, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct206()
{
    int i;
    int[] ints = new int[14];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct634()
{
    int i;
    int[] ints = new int[17];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(17, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct169()
{
    int i;
    int[] ints = new int[5];
    ints[0] = 1;
    ints[1] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(5, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct282()
{
    int i;
    int[] ints = new int[4];
    ints[0] = 1;
    ints[1] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(4, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct290()
{
    int i;
    int[] ints = new int[15];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct755()
{
    int i;
    int[] ints = new int[18];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(18, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct427()
{
    int i;
    int[] ints = new int[16];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct779()
{
    int i;
    int[] ints = new int[4];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(4, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct468()
{
    int i;
    int[] ints = new int[17];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct42()
{
    int i;
    int[] ints = new int[11];
    ints[0] = 1;
    ints[2] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(11, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct737()
{
    int i;
    int[] ints = new int[7];
    ints[0] = 1;
    ints[2] = 1;
    ints[3] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(7, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct986()
{
    int i;
    int[] ints = new int[19];
    ints[0] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(19, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct372()
{
    int i;
    int[] ints = new int[18];
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct735()
{
    int i;
    int[] ints = new int[18];
    ints[17] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(18, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct34()
{
    int i;
    int[] ints = new int[10];
    ints[0] = 1;
    ints[2] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(10, i);
}
[TestMethod]
[PexGeneratedBy(typeof(Question))]
public void countDistinct643()
{
    int i;
    int[] ints = new int[12];
    ints[0] = 1;
    ints[1] = 1;
    i = Question.countDistinct(ints);
    Assert.AreEqual<int>(12, i);
}
    }
}
