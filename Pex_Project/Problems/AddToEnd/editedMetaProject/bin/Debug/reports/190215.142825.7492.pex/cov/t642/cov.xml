<documents created="2019-02-15 20:28:37Z"><document src="C:\Users\Vijayendra Jagtap\NETTools\LearningCode\codeSimilarity\editedMetaProject\1525876539_solution.cs" renderPrefix="s0"><chunk hits="-1" domain="unknown"><source><![CDATA[using Microsoft.Pex.Framework;
using Microsoft.Pex.Framework.Settings;
using System.Text.RegularExpressions;
using System;

namespace Solution {
/// <summary>Array distinct elements question.</summary>
[PexClass(typeof(Question))]
    public partial class Question
{
	/// <summary>Return the count of distinct values in the array.</summary>
	/// <remarks>
	/// Return the count of distinct values in the array.
	/// A value is distinct if it is different from every other value in the array.
	/// As examples:
	/// [0, 1, 2] has 3 distinct values
	/// [0, 1, 0] has 2 distinct values
	/// [0, 0, 0, 0] has 1 distinct value
	/// [5] has 1 distinct value
	/// [] has 0 distinct values
	/// Note that you may use the Java array utility class or maps to solve this problem.
	/// </remarks>
	/// <param name="array">array to search for distinct values</param>
	/// <returns>the count of distinct values in the array</returns>
    [PexMethod(TestEmissionFilter = PexTestEmissionFilter.All, MaxRuns = 360)]
	public static int countDistinct(int[] array)
	]]></source>
</chunk>
<method name="countDistinct" namespace="Solution" type="Solution.Question" typeName="Question" token="60000a9" module="meta_projectAddToEnd.dll"><hits><hit index="0" value="1"/>
<hit index="1" value="1"/>
<hit index="2" value="1"/>
<hit index="3" value="1"/>
<hit index="4" value="1"/>
<hit index="5" value="1"/>
<hit index="6" value="378"/>
<hit index="7" value="378"/>
<hit index="8" value="378"/>
<hit index="9" value="378"/>
<hit index="10" value="259"/>
<hit index="11" value="28"/>
<hit index="12" value="4"/>
<hit index="13" value="29"/>
<hit index="14" value="1"/>
<hit index="15" value="1"/>
<hit index="16" value="1"/>
<hit index="17" value="1"/>
<hit index="18" value="119"/>
<hit index="19" value="378"/>
<hit index="20" value="25"/>
<hit index="21" value="28"/>
</hits>
<coverage domain="usercodeundertest" unit="block" covered="15" total="15" coveredRatio="1"/>
</method>
<chunk hits="1" offset="0000" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		]]></source>
</chunk>
<chunk hits="1" offset="0001" domain="usercodeundertest"><source><![CDATA[int counter = 0;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		]]></source>
</chunk>
<chunk hits="1" offset="0003" domain="usercodeundertest"><source><![CDATA[bool seen = true;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		]]></source>
</chunk>
<chunk hits="1" offset="0005" domain="usercodeundertest"><source><![CDATA[if (array == null || array.Length == 0)]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		]]></source>
</chunk>
<chunk hits="1" offset="001a" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="1" offset="001b" domain="usercodeundertest"><source><![CDATA[return 0;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		}
		else
		]]></source>
</chunk>
<chunk hits="1" offset="0020" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="1" offset="0021" domain="usercodeundertest"><source><![CDATA[if (array.Length == 1)]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="1" offset="0030" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
				]]></source>
</chunk>
<chunk hits="1" offset="0031" domain="usercodeundertest"><source><![CDATA[return 1;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			}
		]]></source>
</chunk>
<chunk hits="1" offset="0036" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		for (]]></source>
</chunk>
<chunk hits="1" offset="0037" domain="usercodeundertest"><source><![CDATA[int i = 0;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[ ]]></source>
</chunk>
<chunk hits="30" offset="0079" domain="usercodeundertest"><source><![CDATA[i < array.Length]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[; ]]></source>
</chunk>
<chunk hits="29" offset="0075" domain="usercodeundertest"><source><![CDATA[i++]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[)
		]]></source>
</chunk>
<chunk hits="28" offset="003b" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="28" offset="003c" domain="usercodeundertest"><source><![CDATA[seen = false;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			// check if its been seen before
			for (]]></source>
</chunk>
<chunk hits="28" offset="003e" domain="usercodeundertest"><source><![CDATA[int j = 0;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[ ]]></source>
</chunk>
<chunk hits="406" offset="005d" domain="usercodeundertest"><source><![CDATA[j < i]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[; ]]></source>
</chunk>
<chunk hits="378" offset="0059" domain="usercodeundertest"><source><![CDATA[j++]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[)
			]]></source>
</chunk>
<chunk hits="378" offset="0042" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
				]]></source>
</chunk>
<chunk hits="378" offset="0043" domain="usercodeundertest"><source><![CDATA[if (array[j] == array[i])]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
				]]></source>
</chunk>
<chunk hits="259" offset="0054" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
					]]></source>
</chunk>
<chunk hits="259" offset="0055" domain="usercodeundertest"><source><![CDATA[seen = true;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
				]]></source>
</chunk>
<chunk hits="259" offset="0057" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="378" offset="0058" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="28" offset="0067" domain="usercodeundertest"><source><![CDATA[if (seen == false)]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="4" offset="006e" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
				]]></source>
</chunk>
<chunk hits="4" offset="006f" domain="usercodeundertest"><source><![CDATA[counter++;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
			]]></source>
</chunk>
<chunk hits="4" offset="0073" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		]]></source>
</chunk>
<chunk hits="29" offset="0074" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
		]]></source>
</chunk>
<chunk hits="1" offset="0085" domain="usercodeundertest"><source><![CDATA[return counter;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
	]]></source>
</chunk>
<chunk hits="3" offset="008a" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
}
}
]]></source>
</chunk>
</document>
</documents>
